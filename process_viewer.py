import psutil
from PyQt5.QtWidgets import QTableWidgetItem
from PyQt5.QtGui import QColor

def update_processes(table_widget):
    processes = {p.info['pid']: p.info for p in psutil.process_iter(['pid', 'name', 'username', 'cpu_percent', 'memory_percent', 'status'])}
    existing_pids = [int(table_widget.item(row, 0).text()) for row in range(table_widget.rowCount()) if table_widget.item(row, 0) is not None]

    rows_to_remove = []
    for row in range(table_widget.rowCount()):
        pid_item = table_widget.item(row, 0)
        if pid_item is not None:
            pid = int(pid_item.text())
            if pid in processes:
                proc = processes.pop(pid)
                update_process_row(table_widget, row, proc)
            else:
                rows_to_remove.append(row)

    for row in sorted(rows_to_remove, reverse=True):
        table_widget.removeRow(row)

    for pid, proc in processes.items():
        row_position = table_widget.rowCount()
        table_widget.insertRow(row_position)
        update_process_row(table_widget, row_position, proc)

def update_process_row(table_widget, row, proc):
    table_widget.setItem(row, 0, QTableWidgetItem(str(proc.get('pid', ''))))
    table_widget.setItem(row, 1, QTableWidgetItem(proc.get('name', 'N/A')))
    table_widget.setItem(row, 2, QTableWidgetItem(proc.get('username', 'N/A')))
    table_widget.setItem(row, 3, create_colored_item(f"{proc.get('cpu_percent', 0):.2f}", proc.get('cpu_percent', 0)))
    table_widget.setItem(row, 4, create_colored_item(f"{proc.get('memory_percent', 0):.2f}", proc.get('memory_percent', 0)))
    table_widget.setItem(row, 5, QTableWidgetItem(proc.get('status', 'N/A')))

def create_colored_item(text, value):
    item = QTableWidgetItem(text)
    if value > 80:
        item.setBackground(QColor('red'))
        item.setForeground(QColor('white'))
    elif value > 50:
        item.setBackground(QColor('orange'))
        item.setForeground(QColor('white'))
    else:
        item.setBackground(QColor('green'))
        item.setForeground(QColor('white'))
    return item
