import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import load_model
import joblib

# Load the saved model
model = load_model('ml_related_files/url_model/malicious_phish_model.h5')

# Load the tokenizer
tokenizer = joblib.load('ml_related_files/url_model/tokenizer.pickle')

# Load the label encoder
label_encoder = joblib.load('ml_related_files/url_model/label_encoder.pickle')

# Function to preprocess the URL
def preprocess_url(url):
    sequences = tokenizer.texts_to_sequences([url])
    return tf.keras.preprocessing.sequence.pad_sequences(sequences, maxlen=100)

# Function to predict if a URL is malicious
def predict_url(url):
    try:
        preprocessed_url = preprocess_url(url)
        prediction = model.predict(preprocessed_url)
        predicted_class = np.argmax(prediction, axis=1)
        confidence = np.max(prediction)
        label = label_encoder.inverse_transform(predicted_class)
        return label[0], confidence
    except Exception as e:
        print(f"Error during prediction: {e}")
        return "error", 0.0
